# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "polygon_models"
version: "1.0.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "polygon"

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"
  - "dbt_packages"

models:
  polygon_models:
    deploy:
      +materialized: ephemeral
      core:
        +tags: core
        secrets:
          +enabled: false
      marketplace:
        +tags: marketplace
  +copy_grants: true

tests:
  +store_failures: true # all tests

on-run-start:
  - "{{ create_sps() }}"
  - "{{ create_udfs() }}"
  - "{{ create_tasks() }}"

on-run-end:
  - '{{ apply_meta_as_tags(results) }}'

dispatch:
  - macro_namespace: dbt
    search_order:
      - polygon-models
      - dbt_snowflake_query_tags
      - dbt

query-comment:
  comment: '{{ dbt_snowflake_query_tags.get_query_comment(node) }}'
  append: true # Snowflake removes prefixed comments.

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

vars:
  STREAMLINE_INVOKE_STREAMS: False
  "dbt_date:time_zone": GMT
  UPDATE_UDFS_AND_SPS: False
  UPDATE_SNOWFLAKE_TAGS: True
  WAIT: 0
  OBSERV_FULL_TEST: False
  BALANCES_START: 0
  BALANCES_END: 15000000
  DROP_UDFS_AND_SPS: False
  UPDATE_GHA_TASKS: False
  STUDIO_TEST_USER_ID: '{{ env_var("STUDIO_TEST_USER_ID", "98d15c30-9fa5-43cd-9c69-3d4c0bb269f5") }}'

  API_INTEGRATION: '{{ var("config")[target.name]["API_INTEGRATION"] }}'
  EXTERNAL_FUNCTION_URI: '{{ var("config")[target.name]["EXTERNAL_FUNCTION_URI"] }}'
  ROLES: '{{ var("config")[target.name]["ROLES"] }}'

  config:
  # The keys correspond to dbt profiles and are case sensitive
    dev:
      API_INTEGRATION: AWS_POLYGON_API_DEV
      EXTERNAL_FUNCTION_URI: rzyjrd54s6.execute-api.us-east-1.amazonaws.com/dev/
      ROLES:
        - INTERNAL_DEV
    prod:
      API_INTEGRATION: AWS_POLYGON_API
      EXTERNAL_FUNCTION_URI: p6dhi5vxn4.execute-api.us-east-1.amazonaws.com/prod/
      ROLES:
        - VELOCITY_INTERNAL
        - VELOCITY_ETHEREUM
        - INTERNAL_DEV
        - BI_ANALYTICS_READER
